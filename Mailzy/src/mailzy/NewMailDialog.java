/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mailzy;

import java.util.regex.Pattern;
import java.util.regex.Matcher;

import net.atlanticbb.tantlinger.shef.HTMLEditorPane;
import javax.swing.JPanel;

import java.awt.AWTException;
import java.awt.Color;

import javax.mail.MessagingException;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.Image;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.TrayIcon.MessageType;

import javax.swing.SwingConstants;
import java.awt.*;
import java.awt.Dimension;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author lalexandrov
 */
public class NewMailDialog extends javax.swing.JDialog {
	
	
    /**
     * Creates new form NewMailDialog
     */
    public NewMailDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        addWindowListener(new WindowAdapter() {
        	@Override
        	public void windowClosing(WindowEvent e) {
        		resetDiaogData();
        	}
        });
        initComponents();
        
        try {
			displayTray();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        menuBar.add(editor.getEditMenu());
        menuBar.add(editor.getFormatMenu());
        menuBar.add(editor.getInsertMenu());
        button.setEnabled(false);
        this.getContentPane().setLayout(null);
        labelTo.setText("To");
        labelSubject.setText("Subject");
		labelTo.setBounds(10,25,50,20);
		labelSubject.setBounds(10,45,50,20);
		textTo.setBounds(70,25,300,20);
		textSubject.setBounds(70,45,300,20);
		
		this.getContentPane().add(labelTo);
		this.getContentPane().add(labelSubject);
		this.getContentPane().add(textTo);
		this.getContentPane().add(textSubject);
		
		
        button.setBounds(680,665,100,40);
        this.getContentPane().add(button);
        editor.setBounds(0, 80, 780, 600);
        this.getContentPane().add(editor);
        this.setVisible(true);
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	labelTo = new javax.swing.JLabel();
    	labelSubject = new javax.swing.JLabel();
    	
    	textTo = new javax.swing.JTextField();
    	textTo.addFocusListener(new FocusAdapter() {
    		@Override
    		public void focusLost(FocusEvent e) {
    			showNotification();
    			
    			isValidEmail();
    			isValidToSend();
    		}
    	});
    	textSubject = new javax.swing.JTextField();
    	textSubject.addKeyListener(new KeyAdapter() {
    		@Override
    		public void keyPressed(KeyEvent e) {
    			subjectLen();
    		}
    	});
    	
        button = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();

        setTitle("New Mail");
        setName("New Mail"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 770));
        setResizable(false);

        button.setText("Send");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					buttonActionPerformed(evt);
				} catch (MessagingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                
            }
        });
        setJMenuBar(menuBar);
        
        panel = new JPanel();
        panel.setBackground(new Color(29, 44, 99));
        
        label = new JLabel();
        
        label_1 = new JLabel();
        label_1.setText("Mailzy");
        label_1.setPreferredSize(new Dimension(150, 50));
        label_1.setName("LOGO");
        label_1.setMinimumSize(new Dimension(150, 50));
        label_1.setMaximumSize(new Dimension(150, 50));
        label_1.setHorizontalAlignment(SwingConstants.CENTER);
        label_1.setForeground(Color.WHITE);
        label_1.setFont(new Font("Dialog", Font.BOLD, 36));
        label_1.setBackground(Color.WHITE);
        GroupLayout gl_panel = new GroupLayout(panel);
        gl_panel.setHorizontalGroup(
        	gl_panel.createParallelGroup(Alignment.TRAILING)
        		.addGap(0, 400, Short.MAX_VALUE)
        		.addGroup(gl_panel.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(label)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(label_1, GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
        			.addContainerGap())
        );
        gl_panel.setVerticalGroup(
        	gl_panel.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 124, Short.MAX_VALUE)
        		.addGroup(gl_panel.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_panel.createParallelGroup(Alignment.LEADING)
        				.addComponent(label, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        				.addComponent(label_1, GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        			.addContainerGap())
        );
        panel.setLayout(gl_panel);
        
        panelNotification = new JPanel();
        panelNotification.setLocation(50, 50);
        panelNotification.setBackground(new Color(29, 44, 99));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(428)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(panel, GroupLayout.PREFERRED_SIZE, 352, GroupLayout.PREFERRED_SIZE)
        						.addComponent(button)))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(241)
        					.addComponent(panelNotification, GroupLayout.PREFERRED_SIZE, 325, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(panel, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
        			.addGap(587)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(button)
        				.addComponent(panelNotification, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        );
        
        labelNotification = new JLabel("New label");
        labelNotification.setForeground(Color.WHITE);
        labelNotification.setFont(new Font("Dialog", Font.BOLD, 36));
        labelNotification.setHorizontalAlignment(SwingConstants.CENTER);
        GroupLayout gl_panelNotification = new GroupLayout(panelNotification);
        gl_panelNotification.setHorizontalGroup(
        	gl_panelNotification.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_panelNotification.createSequentialGroup()
        			.addContainerGap(110, Short.MAX_VALUE)
        			.addComponent(labelNotification, GroupLayout.PREFERRED_SIZE, 147, GroupLayout.PREFERRED_SIZE)
        			.addGap(68))
        );
        gl_panelNotification.setVerticalGroup(
        	gl_panelNotification.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_panelNotification.createSequentialGroup()
        			.addGap(24)
        			.addComponent(labelNotification, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(44, Short.MAX_VALUE))
        );
        panelNotification.setLayout(gl_panelNotification);
        getContentPane().setLayout(layout);

        button.getAccessibleContext().setAccessibleName("button");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) throws MessagingException {//GEN-FIRST:event_buttonActionPerformed
        //TODO: Check if all fields are valid
    	showNotification();
    	//hideNotification();
        this.setVisible(false);
        
    }//GEN-LAST:event_buttonActionPerformed
    
    
    private void isValidEmail() {
    	//List emails = new ArrayList();
    	String toEmail = textTo.getText();
    	String[] arr  = toEmail.split(" "); //Email to multiple addresses
    	String regex = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";
    	String notValid = "Invalid ";
    	boolean bol = false;
    	Pattern p = Pattern.compile(regex);
    	for(String test : arr) {
    		Matcher m = p.matcher(test);
    		System.out.println(test + " : " + m.matches());
    		if(m.matches()==false) {
    			
    			notValid +=" " +  test;
    			
    			bol=true;
    		}
    		
    	}
    	if(bol==true) {
    	labelTo.setToolTipText(notValid);
    	labelTo.setForeground(Color.red);
    	}
    	else
		{
			labelTo.setForeground(Color.black);
			labelTo.setToolTipText(null);
		}

    }
    
    private void subjectLen() {
    	if(textSubject.getText().length()>=40)
        {
			textSubject.setText(textSubject.getText().substring(0, 39));
        }
    }
    
    private void isValidToSend() {
    	Color red = labelTo.getForeground();
    	if(red != Color.red) {
    		button.setEnabled(true);
    	}
    	else {
    		button.setEnabled(false);
    	}
    	
	}
    
    private void showNotification() {
    	labelNotification.setText("Send");
    	Thread th = new Thread() {
			@Override
			public void run() {
				for (int i = 0; i <= 150; i++) {
					try {
						Thread.sleep(8);
					} catch (InterruptedException ex) {

					}
					panelNotification.setSize(panelNotification.getSize().width, i);
					labelNotification.setLocation(i - 37, 10);
				}
				
				// System.out.println(lblMenu.getLocation());
			}

		};
		th.start();
		
    }
    public Mail getMail() {
    	if(this.textTo.getText() == "" || this.textSubject.getText() == "" || this.editor.getText() == "")
    		return null;
    	return new Mail( this.textTo.getText(), this.textSubject.getText(), this.editor.getText() );
    }

	private void resetDiaogData() {
		this.editor.setText("");
		this.textTo.setText("");
		this.textSubject.setText("");
	}
    public void displayTray() throws AWTException {
        //Obtain only one instance of the SystemTray object
        SystemTray tray = SystemTray.getSystemTray();

        //If the icon is a file
        Image image = Toolkit.getDefaultToolkit().createImage("icon.png");
        //Alternative (if the icon is on the classpath):
        //Image image = Toolkit.getDefaultToolkit().createImage(getClass().getResource("icon.png"));

        TrayIcon trayIcon = new TrayIcon(image, "Tray Demo");
        //Let the system resize the image if needed
        trayIcon.setImageAutoSize(true);
        //Set tooltip text for the tray icon
        trayIcon.setToolTip("System tray icon demo");
        tray.add(trayIcon);

        trayIcon.displayMessage("Message sent successfully", "Mailzy", MessageType.INFO);
    }
    
    private HTMLEditorPane editor = new HTMLEditorPane();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel labelTo;
    private javax.swing.JLabel labelSubject;
    private javax.swing.JTextField textTo;
    private javax.swing.JTextField textSubject;
    private JPanel panel;
    private JLabel label;
    private JLabel label_1;
    private JPanel panelNotification;
    private JLabel labelNotification;
}
